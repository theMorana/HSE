"""
Задачи на регулярные выражения
"""
import re

text = "Цены: 100 руб, $50, 75.50 евро, 200₽, 300"
# Задача: Найти все цены с валютами (руб, $, евро, ₽)
# Ожидаемый результат: ['100 руб', '$50', '75.50 евро', '200₽']
new_text = re.findall(r'(\d+(?:\.\d+)?\s?(?:руб|евро|₽)|\$\d+(?:\.\d+)?)', text)
print(f'Задание 1:\n{new_text}\n\n')

html = "<div>Текст <b>жирный</b> и <i>курсивный</i></div>"
# Задача: Удалить все HTML-теги, оставив только текст
# Ожидаемый результат: "Текст жирный и курсивный"
text = re.sub(r'<.*?>', "", html)
print(f'Задание 2:\n{text}\n\n')


text = "Версии: Python 3.9, Java 17.0.1, Node.js v18.15.0, проект v1.2.3.4"
# Задача: Найти все номера версий (числа с точками)
# Ожидаемый результат: ['3.9', '17.0.1', '18.15.0', '1.2.3.4']
new_text = re.findall(r'\d+(?:\.\d+)+', text)  # группа, которая представляет точку с последующими цифрами, повторяется один или более раз
print(f'Задание 3:\n{new_text}\n\n')


complex_text = """
Клиент Иван Иванов (ivan@mail.com, +7-912-345-67-89) 
заказал товар #12345 за 1,500.50 руб. 
Статус: ВЫПОЛНЕНО. Версия заказа v2.1.5.
Сайт: https://store.com/order/12345
"""
# Задачи:
# 1. Найти email и телефон
# 2. Найти номер заказа (#12345)
# 3. Найти цену (1,500.50 руб)
# 4. Найти версию заказа (v2.1.5)

email = re.findall(r'\b[\w.-]+@[\w.-]+\.\w+\b', complex_text)
phone = re.findall(r'[+7|8]\d{10,11}|\d-\d\d\d-\d\d\d-\d\d-\d\d', complex_text)
package = re.findall(r'#\w+',complex_text)
price = re.findall(r'\d{1,3}(?:,\d{3})*(?:\.\d+)?\s*руб.?',complex_text)
package_version = re.findall(r'v+\d+(?:\.\d+)*.?', complex_text)
'''
print(f'Почта: {email}\nТелефон: {phone}\nНомер заказа: {package} \nЦена: {price}\nВерсия заказа: {package_version}')
'''
print("===== ЗАДАНИЕ 4 =====")
print(f"Почта: {', '.join(email)}; \nТелефон: {', '.join(phone)}; \nНомер заказа: {', '.join(package)}; \nЦена: {', '.join(price)}; \nВерсия заказа: {', '.join(package_version)}")
#нашла оператор join(), который делает красивый вывод
